networks:
  backend:
  frontend:
services:
  db:
    build:
      context: ./sql
      dockerfile: db.dockerfile
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: EntitiesAndValues
    ports:
      - "5431:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d EntitiesAndValues"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    networks:
      - backend
  dataseeder:
    build:
      context: .
      dockerfile: dataseeder.dockerfile
      network: host
    depends_on:
      db:
        condition: service_healthy
        restart: true
    networks:
      - backend
  api:
    build:
      context: .
      dockerfile: api.dockerfile
      network: host
    ports:
      - "5001:5000"
    depends_on:
      db:
        condition: service_healthy
        restart: true
    networks:
      - backend
      - frontend
  dataseeder_api:
    build:
      context: .
      dockerfile: dataseeder_api.dockerfile
      network: host
    ports:
      - "5002:5002"
    depends_on:
      db:
        condition: service_healthy
        restart: true
    networks:
      - backend
      - frontend  
  web_backend:
    build:
      context: . 
      dockerfile: web_backend.dockerfile
      network: host
    ports:
      - 8000:8000
    depends_on:
      - redis
      - api
    networks:
      - frontend
  web_frontend:
    build:
      context: .
      dockerfile: web_frontend.dockerfile
      network: host
    ports:
      - 3000:80
    depends_on:
      - web_backend
    networks:
      - frontend  
  redis:
    image: redis
    networks:
      - frontend  